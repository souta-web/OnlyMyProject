
↓福山さんはここから下を見て。
作業内容：チャットページで通常チャットの送信とアクションの送信がされた時の処理を実装する。
　　　　　通常チャットが送信されたときはチャットテーブルに[chatSender,chatTodo,chatMessage,ChatTime]にそれぞれデータを登録する。
　　　　　アクションが送信されたときはチャットテーブルに[chatSender,chatTodo,chatMessage,ChatTime]を登録するプラス、アクションテーブルに[action_name][action_start]を登録する。
　　　　　↑トグルボタンの状態をみてそれぞれ登録してください
　　　　　画像などの登録は後々やります。
　　　　　これに加えてチャットとアクションの表示をしてください。

↓以下やり方
送信ボタン押したときの処理ざっくりわけると
・データベース登録
・吹き出し、アクション表示
なので最終的な処理の流れとしては
1.chat_tableに登録(トグルボタンがオンオフどちらでも共通)
2.if(トグルボタンがオン)→action_tableに登録
3.if(トグルボタンのオフ、オン)→吹き出し、アクション表示

------解説-------
・データベース登録
→通常チャット時(chat_table)
 アクション時(chat_table,action_table)
 
chat_tableに登録するカラムは共通しているので、そこまでは一つの関数で処理して問題ない
登録カラム→(columnChatSender,columnChatTodo,columnChatTodofinish,columnChatMessage,columnChatTime)

その後はif文でトグルボタンの状態を受け取ってtrueならaction_tableへのデータ登録をする

吹き出しなどの画面表示についてもif文でトグルボタンの状態に応じて表示させる

なので必要な関数は大きく分けて↓の三つになる
registerChatTable(チャットテーブルへの登録を担う)←これは作ってあるので他は福山さんのほうで作成してください。
registerActionTable(アクションテーブルへの登録を担う)
drawChatObjects(トグルボタンの状態によってオブジェクト表示をする)

------実際に実装するとこんな感じ↓------
sendButtonPressed(引数){ //送信ボタンが押されたときに呼び出される
    registerChatTable(引数) //ここは確定で呼び出す
    if (_isTodo) { //トグルボタンがオンの時だけ呼び出す
        registerActionTable(引数)
    }
    return drawChatObjects(引数) //この関数内で吹き出しなどを作ってreturnで返す
}

------呼び出し元------
 onPressed: (){
    _messages.add(sendButtonPressed(引数))
 }

これ以外にもいろいろやり方はあると思うけど今の段階で思いつくのはこんな感じ
